import java.util.Scanner;
public class Main{
	public static void main(String[] args) {
		// 6的原码00000000 00000000 00000000 00000110
		// 9的原码00000000 00000000 00000000 00001001
		// 6的补码00000000 00000000 00000000 00000110
		// 9的补码00000000 00000000 00000000 00001001
	//   6 & 9    00000000 00000000 00000000 00000000
		       // 00000000 00000000 00000000 00000000
		System.out.println(6 & 9);
		// -2的原码 10000000 00000000 00000000 00000010
		// -2的反码 11111111 11111111 11111111 11111101
		// -2的补码 11111111 11111111 11111111 11111110
		// 按位取反 00000000 00000000 00000000 00000001
		System.out.println(~-2);
		// 2的补码 00000000 00000000 00000000 00000010
//按位取反（补码）  11111111 11111111 11111111 11111101
	//取反后的反码  11111111 11111111 11111111 11111100
	// 运算后的原码 10000000 00000000 00000000 00000011
		System.out.println(~2);
		// 2的补码 00000000 00000000 00000000 00000010
		// 3的补码 00000000 00000000 00000000 00000011
	//   2|3的补码 00000000 00000000 00000000 00000011
	//   2|3的原码 00000000 00000000 00000000 00000011
		System.out.println(2|3);
		// 2的补码 00000000 00000000 00000000 00000010
		// 3的补码 00000000 00000000 00000000 00000011
	//   2^3的补码 00000000 00000000 00000000 00000001
	//   2^3的原码 00000000 00000000 00000000 00000001
		System.out.println(2^3);
		// -5的原码 10000000 00000000 00000000 00000101
		// -5的反码 11111111 11111111 11111111 11111010
		// -5的补码 11111111 11111111 11111111 11111011
		// 按位取反 00000000 00000000 00000000 00000100
		System.out.println(~-5);
		// 13的补码 00000000 00000000 00000000 00001101
		// 7 的补码 00000000 00000000 00000000 00000111
	    // 13 &7    00000000 00000000 00000000 00000101
		System.out.println(13& 7);
		// 5的补码 00000000 00000000 00000000 00000101
		// 4的补码 00000000 00000000 00000000 00000100
		   //5|4   00000000 00000000 00000000 00000101
		System.out.println(5|4);
		// -3的原码 10000000 00000000 00000000 00000011
		//  3的原码 00000000 00000000 00000000 00000011
		// -3的反码 11111111 11111111 11111111 11111100
		// -3的补码 11111111 11111111 11111111 11111101
	    //  3的补码 00000000 00000000 00000000 00000011
		// -3^3     11111111 11111111 11111111 11111110
		// -3^3  反 11111111 11111111 11111111 11111101
	   //  -3^3  原 10000000 00000000 00000000 00000010
		System.out.println(-3^3);
		
	}
}
